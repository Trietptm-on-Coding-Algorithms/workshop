##
# This module requires Metasploit: http//metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  # https://github.com/rapid7/metasploit-framework/wiki/Exploit-Ranking
  # Rank = ManualRanking
  # Rank = LowRanking
  # Rank = AverageRanking
  Rank = NormalRanking
  # Rank = GoodRanking
  # Rank = GreatRanking
  # Rank = ExcellentRanking

  # include Msf::Auxiliary::Report
  # include Msf::Exploit::Remote::Tcp
  # include Msf::Exploit::Remote::HttpClient
  # include Msf::Exploit::CmdStagerVBS
  # include Msf::Exploit::CmdStagerBourne
  # include Msf::Exploit::Remote::Ftp
  # include Msf::Exploit::RopDb

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Template',
      'Description'    => %q{
        Template description.
      },
      'Author'         => 'Spencer McIntyre',
      'License'        => MSF_LICENSE,
      'References'     => [
        #['CVE', ''],
        #['EDB', ''],
        #['URL', ''],
      ],
      'Platform'       => 'win',
      'Arch'           => ARCH_X86,
      'Payload'        =>
        {
          'StackAdjustment' => -3500,
          'Space'           => 500,            # common size
          'BadChars'        => "\x00\x0a\x0d", # common bad characters
          #'DisableNops'     => true,          # don't pad the payload
        },
      'Targets'        =>
        [

          [ 'Windows',   {  } ],
        ],
      'DefaultTarget'  => 0,
      'Privileged'     => true,
      'DisclosureDate' => 'Jan 1 2013'))

    register_options(
      [
        Opt::RPORT(8080),
        OptString.new('STRING', [ false,  "String Description", 'default value' ]),
        OptInt.new('INTEGER',   [ false,  "Integer Description", 0 ]),
        OptBool.new('BOOL',     [ false,  "Boolean Description", true ]),
        OptEnum.new('ENUM',     [ false,  "Enum Description", 'VALUE1', ['VALUE1', 'VALUE2', 'VALUE3'] ])
      ], self.class)
    deregister_options()
    register_advanced_options(
      [
        OptString.new('ADVSTRING', [ false, "Advanced String Description", 'default value' ])
      ], self.class)
  end

  def check
    # return Exploit::CheckCode::Unknown
    # return Exploit::CheckCode::Safe
    # return Exploit::CheckCode::Detected
    # return Exploit::CheckCode::Appears
    # return Exploit::CheckCode::Vulnerable
    # return Exploit::CheckCode::Unsupported
  end

  def exploit

  end
end
